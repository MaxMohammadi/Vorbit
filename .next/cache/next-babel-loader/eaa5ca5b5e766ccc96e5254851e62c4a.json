{"ast":null,"code":"import * as THREE from \"three\";\nimport * as _ from \"lodash\";\nimport { EARTH_RADIUS_KM } from \"../constants\";\nconst objectForSatelliteIndex = _.memoize(index => ({\n  type: \"satellite\",\n  satelliteIndex: index\n}));\nexport default {\n  key: \"satellite\",\n  name: \"Satellites\",\n  defaultConfig: {\n    enabled: true\n  },\n  objects({\n    satellites\n  }) {\n    return satellites.map((satellite, index) => objectForSatelliteIndex(index));\n  },\n  create(globe, d) {\n    return new THREE.Mesh(new THREE.SphereBufferGeometry(0.25), new THREE.MeshBasicMaterial({\n      color: \"grey\"\n    }));\n  },\n  update(globe, d, obj) {\n    if (!d.position) {\n      return;\n    }\n    let height = d.position.height / EARTH_RADIUS_KM;\n    Object.assign(obj.position, globe.getCoords(d.position.lat, d.position.lng, height));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}