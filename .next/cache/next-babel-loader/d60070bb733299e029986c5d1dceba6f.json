{"ast":null,"code":"var _jsxFileName = \"/Users/maxmohammadi/Vorbit-Space/src/components/SatSim.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React from \"react\";\nimport { loadStarlink, generateStarlink } from \"../starlink\";\nimport _ from \"lodash\";\nimport { assocIn, getIn } from \"icepick\";\nimport { startTimer } from \"../timer\";\nimport { getSatellitePositions } from \"../satellites\";\nimport { getCellsForResolution, computeCoverage, computeCoverageAtMoment, makeCoverage } from \"../coverage\";\nimport Globe from \"globe.gl\";\nimport { Setting, SettingNumber, SettingRange, SettingsSection, SettingsLayerSection, SettingsSectionHeader, SettingsButton, SettingsRow, SettingSelect } from \"./settings\";\nimport satelliteLayer from \"../layers/satellite\";\nimport laserLayer, { laserLinksForSatellites } from \"../layers/laser\";\nimport coverageLayer from \"../layers/coverage\";\nimport gatewayLayer, { getGateways, getGatewaysIndex } from \"../layers/gateway\";\nimport routingLayer from \"../layers/routing\";\nimport { computeShortestPath } from \"../routing\";\nconst layers = [satelliteLayer, coverageLayer, gatewayLayer, laserLayer, routingLayer];\nconst GENERATED_PRESETS = [{\n  name: \"Starlink - Original\",\n  value: [{\n    orbitalPlanes: 32,\n    satellitesPerOrbitalPlane: 50,\n    altitude: 1100,\n    inclination: 53\n  }]\n}, {\n  name: \"Starlink - Nov 2018\",\n  value: [{\n    orbitalPlanes: 24,\n    satellitesPerOrbitalPlane: 66,\n    altitude: 550,\n    inclination: 53\n  }]\n}, {\n  name: \"Starlink - Dec 2019\",\n  value: [{\n    orbitalPlanes: 72,\n    satellitesPerOrbitalPlane: 22,\n    altitude: 550,\n    inclination: 53\n  }]\n}];\nconst DEFAULT_CONFIG = {\n  multiplier: 50,\n  elevation: 40,\n  satellitesType: \"starlink\",\n  layers: {},\n  generated: GENERATED_PRESETS[1].value\n};\n\n// settings managed outside of config\nlet multiplier;\nlet elevation;\nconst LAYERS_MAP = {};\nfor (const layer of layers) {\n  LAYERS_MAP[layer.key] = layer;\n  DEFAULT_CONFIG.layers[layer.key] = _objectSpread({}, layer.defaultConfig);\n}\nfunction getConfigFromURL() {\n  try {\n    return JSON.parse(atob(window.location.hash.slice(1)));\n  } catch (e) {\n    return null;\n  }\n}\nfunction setConfigInURL(config) {\n  window.location.hash = \"#\" + btoa(JSON.stringify(config));\n}\nexport default function SatSim() {\n  const ref = React.useRef(null);\n  const [globe, setGlobe] = React.useState(null);\n  const [config, setConfigState] = React.useState(getConfigFromURL() || DEFAULT_CONFIG);\n  const setConfig = (keyPath, value) => {\n    const newConfig = assocIn(config, keyPath, value);\n    setConfigState(newConfig);\n    setConfigInURL(newConfig);\n  };\n  const getConfig = keyPath => getIn(config, keyPath);\n  const inputConfig = keyPath => ({\n    value: getConfig(keyPath),\n    onChange: e => setConfig(keyPath, e.target.value)\n  });\n  const checkboxConfig = keyPath => ({\n    checked: getConfig(keyPath),\n    onChange: e => setConfig(keyPath, e.target.checked)\n  });\n  React.useEffect(() => {\n    const globe = init(ref.current);\n    setGlobe({\n      globe\n    });\n  }, []);\n  const [computedConfig, setComputedConfig] = React.useState(null);\n  React.useEffect(() => {\n    (async () => {\n      let satellites = [];\n      if (config.satellitesType === \"starlink\") {\n        satellites = await loadStarlink();\n      } else if (config.satellitesType === \"generated\") {\n        satellites = generateStarlink(config.generated);\n      }\n      setComputedConfig(_objectSpread(_objectSpread({}, config), {}, {\n        satellites\n      }));\n    })();\n  }, [config]);\n  React.useEffect(() => {\n    if (globe && computedConfig) {\n      globe.globe.config = computedConfig;\n      return update(globe.globe);\n    }\n  }, [globe, computedConfig]);\n\n  // these are stored separately for performance reasons\n  const [multiplier_, setMultiplier] = React.useState(DEFAULT_CONFIG.multiplier);\n  multiplier = multiplier_;\n  const [elevation_, setElevation] = React.useState(DEFAULT_CONFIG.elevation);\n  elevation = elevation_;\n  const setRealTime = () => {\n    setMultiplier(1);\n    globe.date = null;\n    setConfig([\"nonce\"], Date.now());\n  };\n  const [settingsVisible, setSettingsVisible] = React.useState(window.innerWidth > 1000);\n  const settingsProps = {\n    config,\n    inputConfig,\n    checkboxConfig,\n    setConfig,\n    getConfig\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"absolute top-0 left-0 bottom-0 right-0 flex flex-col items-center bg-black\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 left-0 text-white p-2\",\n    id: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 right-0 text-white p-2\",\n    id: \"fps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 right-0 left-0 text-white text-center p-2\",\n    id: \"route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute top-0 right-0 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, \"SatSim v1.0 \", __jsx(\"a\", {\n    href: \"https://github.com/tlrobinson/satsim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"(src)\")), settingsVisible ? __jsx(\"div\", {\n    className: \"absolute top-0 left-0 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, __jsx(SettingsSectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, \"Satellites\", __jsx(\"span\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), __jsx(SettingsButton, {\n    onClick: () => setSettingsVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"\\xD7\")), __jsx(SettingsSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, __jsx(SettingSelect, _extends({}, inputConfig([\"satellitesType\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }), __jsx(\"option\", {\n    value: \"starlink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Starlink (Live)\"), __jsx(\"option\", {\n    value: \"generated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Generated\")), getConfig([\"satellitesType\"]) === \"generated\" && __jsx(SettingSelect, {\n    className: \"ml-2\",\n    value: _.findIndex(GENERATED_PRESETS, ({\n      value\n    }) => _.isEqual(value, config.generated)),\n    onChange: e => setConfig([\"generated\"], GENERATED_PRESETS[e.target.value].value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    disabled: true,\n    value: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"Select a preset...\"), GENERATED_PRESETS.map(({\n    name\n  }, index) => __jsx(\"option\", {\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, name)))), getConfig([\"satellitesType\"]) === \"generated\" && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, getConfig([\"generated\"]).map((shell, shellIndex, shells) => __jsx(\"div\", {\n    className: \"border-b border-white mt-1 mb-1 pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, \"Orbital Shell \", shellIndex + 1), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, \" – \", shell.orbitalPlanes * shell.satellitesPerOrbitalPlane, \" \", \"satellites\"), __jsx(\"span\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 23\n    }\n  }), shells.length > 1 && __jsx(SettingsButton, {\n    onClick: () => setConfig([\"generated\"], [...shells.slice(0, shellIndex), ...shells.slice(shellIndex + 1)]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), shellIndex === shells.length - 1 && __jsx(SettingsButton, {\n    onClick: () => setConfig([\"generated\"], [...shells, shell]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, \"+\")), __jsx(Setting, {\n    title: \"Orbital Planes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, __jsx(SettingNumber, _extends({\n    min: 1,\n    max: 100\n  }, inputConfig([\"generated\", shellIndex, \"orbitalPlanes\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 23\n    }\n  }))), __jsx(Setting, {\n    title: \"Satellites per Plane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, __jsx(SettingNumber, _extends({\n    min: 1,\n    max: 100\n  }, inputConfig([\"generated\", shellIndex, \"satellitesPerOrbitalPlane\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }))), __jsx(Setting, {\n    title: \"Inclination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, __jsx(SettingNumber, _extends({\n    min: 0,\n    max: 360\n  }, inputConfig([\"generated\", shellIndex, \"inclination\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }))), __jsx(Setting, {\n    title: \"Altitude\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, __jsx(SettingNumber, _extends({\n    min: 1,\n    max: 1000\n  }, inputConfig([\"generated\", shellIndex, \"altitude\"]), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }\n  })))))), __jsx(Setting, {\n    title: \"Min Elevation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, __jsx(SettingRange, {\n    min: 0,\n    max: 90,\n    value: elevation,\n    onChange: e => setElevation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, elevation, \"\\xB0\"))), __jsx(SettingsSectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"Time\"), __jsx(SettingsSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, __jsx(SettingRange, {\n    min: -400,\n    max: 400,\n    value: multiplier,\n    onChange: e => setMultiplier(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, multiplier, \"\\xD7\"), __jsx(\"span\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }), __jsx(SettingsButton, {\n    onClick: setRealTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, \"Real-time\"))), __jsx(SettingsSectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, \"Layers\"), layers.filter(layer => typeof layer.canEnable !== \"function\" || layer.canEnable(config)).map(layer => __jsx(SettingsLayerSection, {\n    layer: layer,\n    config: config,\n    setConfig: setConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, typeof layer.renderSettings === \"function\" && layer.renderSettings(settingsProps)))) : __jsx(\"div\", {\n    className: \"absolute top-0 left-0 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, __jsx(SettingsSectionHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsButton, {\n    onClick: () => setSettingsVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, \"Settings\"))));\n}\nfunction init(element) {\n  const globe = Globe();\n  globe(element).globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-dark.jpg\")\n  // .bumpImageUrl(\"//unpkg.com/three-globe/example/img/earth-topology.png\")\n  // .backgroundImageUrl(\"//unpkg.com/three-globe/example/img/night-sky.png\")\n  .pointOfView({\n    lat: 38,\n    lng: -100,\n    altitude: 1.5\n  }, 1000).customThreeObject((d, globeRadius) => {\n    globe.radius = globeRadius;\n    if (LAYERS_MAP[d.type]) {\n      return LAYERS_MAP[d.type].create(globe, d, globeRadius);\n    } else {\n      console.warn(\"Unknown type\", d.type);\n    }\n  }).customThreeObjectUpdate((obj, d, globeRadius) => {\n    globe.radius = globeRadius;\n    if (LAYERS_MAP[d.type]) {\n      return LAYERS_MAP[d.type].update(globe, d, obj, globeRadius);\n    }\n  });\n  return globe;\n}\nfunction update(globe) {\n  const {\n    config\n  } = globe;\n  const {\n    satellites\n  } = config;\n  globe.satellites = satellites;\n  const resolution = config.layers.coverage.resolution;\n  const coverageAverageEnabled = config.layers.coverage.enabled && config.layers.coverage.type === \"average\";\n  const routingEnabled = config.layers.routing.enabled;\n  const routingLasersEnabled = config.layers.routing.use_laser_links;\n  const laserEnabled = config.layers.laser.enabled;\n  let coverageTotal;\n  if (coverageAverageEnabled) {\n    globe.cells = getCellsForResolution(resolution);\n    globe.coverage = computeCoverage({\n      resolution,\n      satellites\n    });\n    coverageTotal = makeCoverage(globe.cells);\n  }\n  globe.laserLinks = [];\n  if (laserEnabled || routingEnabled && routingLasersEnabled) {\n    globe.laserLinks = laserLinksForSatellites(satellites, config.layers.laser);\n  }\n  globe.gateways = getGateways(config.layers.gateway);\n  globe.gatewaysIndex = getGatewaysIndex(globe.gateways);\n  const enabledLayers = layers.filter(layer => config.layers[layer.key].enabled);\n  const customLayerData = enabledLayers.flatMap(layer => layer.objects(globe));\n  globe.customLayerData(customLayerData);\n  let ticks = 0;\n  let last;\n  let avgFps;\n  let SMOOTHING = 0.95;\n  function update(date) {\n    ticks++;\n    globe.config.elevation = elevation;\n    const positions = getSatellitePositions(satellites, date, {\n      elevation: globe.config.elevation\n    });\n    globe.positions = positions;\n    globe.date = date;\n    let satellitesByCell, cellsBySatellite;\n    if (coverageAverageEnabled || routingEnabled) {\n      ({\n        satellitesByCell,\n        cellsBySatellite\n      } = computeCoverageAtMoment({\n        elevation: globe.config.elevation,\n        resolution,\n        positions\n      }));\n    }\n    globe.coverage = {};\n    if (coverageAverageEnabled) {\n      for (const cell of Object.keys(coverageTotal)) {\n        coverageTotal[cell] += satellitesByCell[cell] ? 1 : 0;\n        globe.coverage[cell] = coverageTotal[cell] / ticks;\n      }\n    }\n    globe.route = null;\n    document.getElementById(\"route\").textContent = \"\";\n    if (routingEnabled) {\n      const {\n        pointA,\n        pointB,\n        use_laser_links,\n        use_gateways\n      } = globe.config.layers.routing;\n      let links = [];\n      if (use_laser_links) {\n        links.push(...globe.laserLinks);\n      }\n      let relays = [];\n      if (use_gateways) {\n        relays.push(...globe.gateways.map(g => g.position));\n      }\n      try {\n        globe.route = computeShortestPath(pointA, pointB, positions, {\n          links,\n          relays,\n          satellitesByCell,\n          resolution\n        });\n        document.getElementById(\"route\").textContent = `Route distance: ${Math.round(globe.route.distance)} km. Route latency: ~${Math.round(globe.route.latency)} ms`;\n      } catch (e) {\n        document.getElementById(\"route\").textContent = \"Route: none\";\n      }\n    }\n    for (const data of customLayerData) {\n      if (data.satelliteIndex != null) {\n        data.position = positions[data.satelliteIndex];\n      }\n      if (data.satelliteIndexes) {\n        data.positions = data.satelliteIndexes.map(index => positions[index]);\n      }\n    }\n    globe.customLayerData(customLayerData);\n    const now = Date.now();\n    if (last != null) {\n      const fps = 1 / ((now - last) / 1000);\n      avgFps = (avgFps || fps) * SMOOTHING + fps * (1.0 - SMOOTHING);\n      document.getElementById(\"fps\").textContent = avgFps.toFixed(0) + \" FPS\";\n    }\n    last = now;\n    document.getElementById(\"time\").textContent = String(date).replace(/ \\(.*/, \"\");\n  }\n  return startTimer(update, {\n    // start: globe.date ? globe.date.getTime() : Date.now(),\n    multiplier: () => multiplier,\n    interval: 20\n  });\n}","map":{"version":3,"names":["React","loadStarlink","generateStarlink","_","assocIn","getIn","startTimer","getSatellitePositions","getCellsForResolution","computeCoverage","computeCoverageAtMoment","makeCoverage","Globe","Setting","SettingNumber","SettingRange","SettingsSection","SettingsLayerSection","SettingsSectionHeader","SettingsButton","SettingsRow","SettingSelect","satelliteLayer","laserLayer","laserLinksForSatellites","coverageLayer","gatewayLayer","getGateways","getGatewaysIndex","routingLayer","computeShortestPath","layers","GENERATED_PRESETS","name","value","orbitalPlanes","satellitesPerOrbitalPlane","altitude","inclination","DEFAULT_CONFIG","multiplier","elevation","satellitesType","generated","LAYERS_MAP","layer","key","_objectSpread","defaultConfig","getConfigFromURL","JSON","parse","atob","window","location","hash","slice","e","setConfigInURL","config","btoa","stringify","SatSim","ref","useRef","globe","setGlobe","useState","setConfigState","setConfig","keyPath","newConfig","getConfig","inputConfig","onChange","target","checkboxConfig","checked","useEffect","init","current","computedConfig","setComputedConfig","satellites","update","multiplier_","setMultiplier","elevation_","setElevation","setRealTime","date","Date","now","settingsVisible","setSettingsVisible","innerWidth","settingsProps","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","href","onClick","_extends","findIndex","isEqual","disabled","map","index","shell","shellIndex","shells","length","title","min","max","filter","canEnable","renderSettings","element","globeImageUrl","pointOfView","lat","lng","customThreeObject","d","globeRadius","radius","type","create","console","warn","customThreeObjectUpdate","obj","resolution","coverage","coverageAverageEnabled","enabled","routingEnabled","routing","routingLasersEnabled","use_laser_links","laserEnabled","laser","coverageTotal","cells","laserLinks","gateways","gateway","gatewaysIndex","enabledLayers","customLayerData","flatMap","objects","ticks","last","avgFps","SMOOTHING","positions","satellitesByCell","cellsBySatellite","cell","Object","keys","route","document","getElementById","textContent","pointA","pointB","use_gateways","links","push","relays","g","position","Math","round","distance","latency","data","satelliteIndex","satelliteIndexes","fps","toFixed","String","replace","interval"],"sources":["/Users/maxmohammadi/Vorbit-Space/src/components/SatSim.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { loadStarlink, generateStarlink } from \"../starlink\";\n\nimport _ from \"lodash\";\nimport { assoc, assocIn, getIn } from \"icepick\";\n\nimport { startTimer } from \"../timer\";\nimport { getSatellitePositions } from \"../satellites\";\nimport {\n  getCellsForResolution,\n  computeCoverage,\n  computeCoverageAtMoment,\n  makeCoverage,\n} from \"../coverage\";\n\nimport Globe from \"globe.gl\";\n\nimport {\n  Setting,\n  SettingNumber,\n  SettingRange,\n  SettingsSection,\n  SettingsLayerSection,\n  SettingsSectionHeader,\n  SettingsButton,\n  SettingsRow,\n  SettingSelect,\n} from \"./settings\";\n\nimport satelliteLayer from \"../layers/satellite\";\nimport laserLayer, { laserLinksForSatellites } from \"../layers/laser\";\nimport coverageLayer from \"../layers/coverage\";\nimport gatewayLayer, { getGateways, getGatewaysIndex } from \"../layers/gateway\";\nimport routingLayer from \"../layers/routing\";\n\nimport { computeShortestPath } from \"../routing\";\n\nconst layers = [\n  satelliteLayer,\n  coverageLayer,\n  gatewayLayer,\n  laserLayer,\n  routingLayer,\n];\n\nconst GENERATED_PRESETS = [\n  {\n    name: \"Starlink - Original\",\n    value: [\n      {\n        orbitalPlanes: 32,\n        satellitesPerOrbitalPlane: 50,\n        altitude: 1100,\n        inclination: 53,\n      },\n    ],\n  },\n  {\n    name: \"Starlink - Nov 2018\",\n    value: [\n      {\n        orbitalPlanes: 24,\n        satellitesPerOrbitalPlane: 66,\n        altitude: 550,\n        inclination: 53,\n      },\n    ],\n  },\n  {\n    name: \"Starlink - Dec 2019\",\n    value: [\n      {\n        orbitalPlanes: 72,\n        satellitesPerOrbitalPlane: 22,\n        altitude: 550,\n        inclination: 53,\n      },\n    ],\n  },\n];\n\nconst DEFAULT_CONFIG = {\n  multiplier: 50,\n  elevation: 40,\n  satellitesType: \"starlink\",\n  layers: {},\n  generated: GENERATED_PRESETS[1].value,\n};\n\n// settings managed outside of config\nlet multiplier;\nlet elevation;\n\nconst LAYERS_MAP = {};\nfor (const layer of layers) {\n  LAYERS_MAP[layer.key] = layer;\n  DEFAULT_CONFIG.layers[layer.key] = { ...layer.defaultConfig };\n}\n\nfunction getConfigFromURL() {\n  try {\n    return JSON.parse(atob(window.location.hash.slice(1)));\n  } catch (e) {\n    return null;\n  }\n}\nfunction setConfigInURL(config) {\n  window.location.hash = \"#\" + btoa(JSON.stringify(config));\n}\n\nexport default function SatSim() {\n  const ref = React.useRef(null);\n  const [globe, setGlobe] = React.useState(null);\n  const [config, setConfigState] = React.useState(\n    getConfigFromURL() || DEFAULT_CONFIG\n  );\n  const setConfig = (keyPath, value) => {\n    const newConfig = assocIn(config, keyPath, value);\n    setConfigState(newConfig);\n    setConfigInURL(newConfig);\n  };\n  const getConfig = (keyPath) => getIn(config, keyPath);\n  const inputConfig = (keyPath) => ({\n    value: getConfig(keyPath),\n    onChange: (e) => setConfig(keyPath, e.target.value),\n  });\n  const checkboxConfig = (keyPath) => ({\n    checked: getConfig(keyPath),\n    onChange: (e) => setConfig(keyPath, e.target.checked),\n  });\n\n  React.useEffect(() => {\n    const globe = init(ref.current);\n    setGlobe({ globe });\n  }, []);\n\n  const [computedConfig, setComputedConfig] = React.useState(null);\n  React.useEffect(() => {\n    (async () => {\n      let satellites = [];\n      if (config.satellitesType === \"starlink\") {\n        satellites = await loadStarlink();\n      } else if (config.satellitesType === \"generated\") {\n        satellites = generateStarlink(config.generated);\n      }\n      setComputedConfig({\n        ...config,\n        satellites,\n      });\n    })();\n  }, [config]);\n\n  React.useEffect(() => {\n    if (globe && computedConfig) {\n      globe.globe.config = computedConfig;\n      return update(globe.globe);\n    }\n  }, [globe, computedConfig]);\n\n  // these are stored separately for performance reasons\n  const [multiplier_, setMultiplier] = React.useState(\n    DEFAULT_CONFIG.multiplier\n  );\n  multiplier = multiplier_;\n  const [elevation_, setElevation] = React.useState(DEFAULT_CONFIG.elevation);\n  elevation = elevation_;\n\n  const setRealTime = () => {\n    setMultiplier(1);\n    globe.date = null;\n    setConfig([\"nonce\"], Date.now());\n  };\n\n  const [settingsVisible, setSettingsVisible] = React.useState(\n    window.innerWidth > 1000\n  );\n\n  const settingsProps = {\n    config,\n    inputConfig,\n    checkboxConfig,\n    setConfig,\n    getConfig,\n  };\n  return (\n    <div>\n      <div\n        className=\"absolute top-0 left-0 bottom-0 right-0 flex flex-col items-center bg-black\"\n        ref={ref}\n      ></div>\n      <div className=\"absolute bottom-0 left-0 text-white p-2\" id=\"time\"></div>\n      <div className=\"absolute bottom-0 right-0 text-white p-2\" id=\"fps\"></div>\n      <div\n        className=\"absolute bottom-0 right-0 left-0 text-white text-center p-2\"\n        id=\"route\"\n      ></div>\n      <div className=\"absolute top-0 right-0 text-white\">\n        SatSim v1.0 <a href=\"https://github.com/tlrobinson/satsim\">(src)</a>\n      </div>\n      {settingsVisible ? (\n        <div className=\"absolute top-0 left-0 text-white\">\n          <SettingsSectionHeader>\n            Satellites\n            <span className=\"flex-1\" />\n            <SettingsButton onClick={() => setSettingsVisible(false)}>\n              ×\n            </SettingsButton>\n          </SettingsSectionHeader>\n          <SettingsSection>\n            <SettingsRow>\n              <SettingSelect {...inputConfig([\"satellitesType\"])}>\n                <option value=\"starlink\">Starlink (Live)</option>\n                <option value=\"generated\">Generated</option>\n              </SettingSelect>\n              {getConfig([\"satellitesType\"]) === \"generated\" && (\n                <SettingSelect\n                  className=\"ml-2\"\n                  value={_.findIndex(GENERATED_PRESETS, ({ value }) =>\n                    _.isEqual(value, config.generated)\n                  )}\n                  onChange={(e) =>\n                    setConfig(\n                      [\"generated\"],\n                      GENERATED_PRESETS[e.target.value].value\n                    )\n                  }\n                >\n                  <option disabled value={-1}>\n                    Select a preset...\n                  </option>\n                  {GENERATED_PRESETS.map(({ name }, index) => (\n                    <option value={index}>{name}</option>\n                  ))}\n                </SettingSelect>\n              )}\n            </SettingsRow>\n\n            {getConfig([\"satellitesType\"]) === \"generated\" && (\n              <div>\n                {getConfig([\"generated\"]).map((shell, shellIndex, shells) => (\n                  <div className=\"border-b border-white mt-1 mb-1 pb-1\">\n                    <div className=\"flex items-center\">\n                      <strong>Orbital Shell {shellIndex + 1}</strong>\n                      <span>\n                        {\" – \"}\n                        {shell.orbitalPlanes *\n                          shell.satellitesPerOrbitalPlane}{\" \"}\n                        satellites\n                      </span>\n                      <span className=\"flex-1\" />\n                      {shells.length > 1 && (\n                        <SettingsButton\n                          onClick={() =>\n                            setConfig(\n                              [\"generated\"],\n                              [\n                                ...shells.slice(0, shellIndex),\n                                ...shells.slice(shellIndex + 1),\n                              ]\n                            )\n                          }\n                        >\n                          ×\n                        </SettingsButton>\n                      )}\n                      {shellIndex === shells.length - 1 && (\n                        <SettingsButton\n                          onClick={() =>\n                            setConfig([\"generated\"], [...shells, shell])\n                          }\n                        >\n                          +\n                        </SettingsButton>\n                      )}\n                    </div>\n                    <Setting title=\"Orbital Planes\">\n                      <SettingNumber\n                        min={1}\n                        max={100}\n                        {...inputConfig([\n                          \"generated\",\n                          shellIndex,\n                          \"orbitalPlanes\",\n                        ])}\n                      />\n                    </Setting>\n                    <Setting title=\"Satellites per Plane\">\n                      <SettingNumber\n                        min={1}\n                        max={100}\n                        {...inputConfig([\n                          \"generated\",\n                          shellIndex,\n                          \"satellitesPerOrbitalPlane\",\n                        ])}\n                      />\n                    </Setting>\n                    <Setting title=\"Inclination\">\n                      <SettingNumber\n                        min={0}\n                        max={360}\n                        {...inputConfig([\n                          \"generated\",\n                          shellIndex,\n                          \"inclination\",\n                        ])}\n                      />\n                    </Setting>\n                    <Setting title=\"Altitude\">\n                      <SettingNumber\n                        min={1}\n                        max={1000}\n                        {...inputConfig([\"generated\", shellIndex, \"altitude\"])}\n                      />\n                    </Setting>\n                  </div>\n                ))}\n              </div>\n            )}\n            <Setting title=\"Min Elevation\">\n              <SettingRange\n                min={0}\n                max={90}\n                value={elevation}\n                onChange={(e) => setElevation(e.target.value)}\n              />\n              <span className=\"ml-1\">{elevation}°</span>\n            </Setting>\n          </SettingsSection>\n          <SettingsSectionHeader>Time</SettingsSectionHeader>\n          <SettingsSection>\n            <SettingsRow>\n              <SettingRange\n                min={-400}\n                max={400}\n                value={multiplier}\n                onChange={(e) => setMultiplier(e.target.value)}\n              />\n              <span className=\"ml-1\">{multiplier}×</span>\n              <span className=\"flex-1\" />\n              <SettingsButton onClick={setRealTime}>Real-time</SettingsButton>\n            </SettingsRow>\n          </SettingsSection>\n          <SettingsSectionHeader>Layers</SettingsSectionHeader>\n          {layers\n            .filter(\n              (layer) =>\n                typeof layer.canEnable !== \"function\" || layer.canEnable(config)\n            )\n            .map((layer) => (\n              <SettingsLayerSection\n                layer={layer}\n                config={config}\n                setConfig={setConfig}\n              >\n                {typeof layer.renderSettings === \"function\" &&\n                  layer.renderSettings(settingsProps)}\n              </SettingsLayerSection>\n            ))}\n        </div>\n      ) : (\n        <div className=\"absolute top-0 left-0 text-white\">\n          <SettingsSectionHeader>\n            <SettingsButton onClick={() => setSettingsVisible(true)}>\n              Settings\n            </SettingsButton>\n          </SettingsSectionHeader>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction init(element) {\n  const globe = Globe();\n\n  globe(element)\n    .globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-dark.jpg\")\n    // .bumpImageUrl(\"//unpkg.com/three-globe/example/img/earth-topology.png\")\n    // .backgroundImageUrl(\"//unpkg.com/three-globe/example/img/night-sky.png\")\n    .pointOfView({ lat: 38, lng: -100, altitude: 1.5 }, 1000)\n    .customThreeObject((d, globeRadius) => {\n      globe.radius = globeRadius;\n      if (LAYERS_MAP[d.type]) {\n        return LAYERS_MAP[d.type].create(globe, d, globeRadius);\n      } else {\n        console.warn(\"Unknown type\", d.type);\n      }\n    })\n    .customThreeObjectUpdate((obj, d, globeRadius) => {\n      globe.radius = globeRadius;\n      if (LAYERS_MAP[d.type]) {\n        return LAYERS_MAP[d.type].update(globe, d, obj, globeRadius);\n      }\n    });\n\n  return globe;\n}\n\nfunction update(globe) {\n  const { config } = globe;\n  const { satellites } = config;\n\n  globe.satellites = satellites;\n\n  const resolution = config.layers.coverage.resolution;\n\n  const coverageAverageEnabled =\n    config.layers.coverage.enabled && config.layers.coverage.type === \"average\";\n  const routingEnabled = config.layers.routing.enabled;\n  const routingLasersEnabled = config.layers.routing.use_laser_links;\n  const laserEnabled = config.layers.laser.enabled;\n\n  let coverageTotal;\n  if (coverageAverageEnabled) {\n    globe.cells = getCellsForResolution(resolution);\n    globe.coverage = computeCoverage({ resolution, satellites });\n    coverageTotal = makeCoverage(globe.cells);\n  }\n\n  globe.laserLinks = [];\n  if (laserEnabled || (routingEnabled && routingLasersEnabled)) {\n    globe.laserLinks = laserLinksForSatellites(satellites, config.layers.laser);\n  }\n\n  globe.gateways = getGateways(config.layers.gateway);\n  globe.gatewaysIndex = getGatewaysIndex(globe.gateways);\n\n  const enabledLayers = layers.filter(\n    (layer) => config.layers[layer.key].enabled\n  );\n\n  const customLayerData = enabledLayers.flatMap((layer) =>\n    layer.objects(globe)\n  );\n\n  globe.customLayerData(customLayerData);\n\n  let ticks = 0;\n  let last;\n  let avgFps;\n  let SMOOTHING = 0.95;\n  function update(date) {\n    ticks++;\n\n    globe.config.elevation = elevation;\n\n    const positions = getSatellitePositions(satellites, date, {\n      elevation: globe.config.elevation,\n    });\n\n    globe.positions = positions;\n    globe.date = date;\n\n    let satellitesByCell, cellsBySatellite;\n    if (coverageAverageEnabled || routingEnabled) {\n      ({ satellitesByCell, cellsBySatellite } = computeCoverageAtMoment({\n        elevation: globe.config.elevation,\n        resolution,\n        positions,\n      }));\n    }\n\n    globe.coverage = {};\n    if (coverageAverageEnabled) {\n      for (const cell of Object.keys(coverageTotal)) {\n        coverageTotal[cell] += satellitesByCell[cell] ? 1 : 0;\n        globe.coverage[cell] = coverageTotal[cell] / ticks;\n      }\n    }\n\n    globe.route = null;\n    document.getElementById(\"route\").textContent = \"\";\n    if (routingEnabled) {\n      const {\n        pointA,\n        pointB,\n        use_laser_links,\n        use_gateways,\n      } = globe.config.layers.routing;\n      let links = [];\n      if (use_laser_links) {\n        links.push(...globe.laserLinks);\n      }\n      let relays = [];\n      if (use_gateways) {\n        relays.push(...globe.gateways.map((g) => g.position));\n      }\n\n      try {\n        globe.route = computeShortestPath(pointA, pointB, positions, {\n          links,\n          relays,\n          satellitesByCell,\n          resolution,\n        });\n        document.getElementById(\n          \"route\"\n        ).textContent = `Route distance: ${Math.round(\n          globe.route.distance\n        )} km. Route latency: ~${Math.round(globe.route.latency)} ms`;\n      } catch (e) {\n        document.getElementById(\"route\").textContent = \"Route: none\";\n      }\n    }\n\n    for (const data of customLayerData) {\n      if (data.satelliteIndex != null) {\n        data.position = positions[data.satelliteIndex];\n      }\n      if (data.satelliteIndexes) {\n        data.positions = data.satelliteIndexes.map((index) => positions[index]);\n      }\n    }\n    globe.customLayerData(customLayerData);\n\n    const now = Date.now();\n    if (last != null) {\n      const fps = 1 / ((now - last) / 1000);\n      avgFps = (avgFps || fps) * SMOOTHING + fps * (1.0 - SMOOTHING);\n      document.getElementById(\"fps\").textContent = avgFps.toFixed(0) + \" FPS\";\n    }\n    last = now;\n\n    document.getElementById(\"time\").textContent = String(date).replace(\n      / \\(.*/,\n      \"\"\n    );\n  }\n\n  return startTimer(update, {\n    // start: globe.date ? globe.date.getTime() : Date.now(),\n    multiplier: () => multiplier,\n    interval: 20,\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}