{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { loadStarlink, generateStarlink } from \"../starlink\";\nimport _ from \"lodash\";\nimport { assocIn, getIn } from \"icepick\";\nimport { startTimer } from \"../timer\";\nimport { getSatellitePositions } from \"../satellites\";\nimport { getCellsForResolution, computeCoverage, computeCoverageAtMoment, makeCoverage } from \"../coverage\";\nimport Globe from \"globe.gl\";\nimport { Setting, SettingNumber, SettingRange, SettingsSection, SettingsLayerSection, SettingsSectionHeader, SettingsButton, SettingsRow, SettingSelect } from \"./settings\";\nimport satelliteLayer from \"../layers/satellite\";\nimport laserLayer, { laserLinksForSatellites } from \"../layers/laser\";\nimport coverageLayer from \"../layers/coverage\";\nimport gatewayLayer, { getGateways, getGatewaysIndex } from \"../layers/gateway\";\nimport routingLayer from \"../layers/routing\";\nimport { computeShortestPath } from \"../routing\";\nvar layers = [satelliteLayer, coverageLayer, gatewayLayer, laserLayer, routingLayer];\nvar GENERATED_PRESETS = [{\n  name: \"Starlink - Original\",\n  value: [{\n    orbitalPlanes: 32,\n    satellitesPerOrbitalPlane: 50,\n    altitude: 1100,\n    inclination: 53\n  }]\n}, {\n  name: \"Starlink - Nov 2018\",\n  value: [{\n    orbitalPlanes: 24,\n    satellitesPerOrbitalPlane: 66,\n    altitude: 550,\n    inclination: 53\n  }]\n}, {\n  name: \"Starlink - Dec 2019\",\n  value: [{\n    orbitalPlanes: 72,\n    satellitesPerOrbitalPlane: 22,\n    altitude: 550,\n    inclination: 53\n  }]\n}];\nvar DEFAULT_CONFIG = {\n  multiplier: 50,\n  elevation: 40,\n  satellitesType: \"starlink\",\n  layers: {},\n  generated: GENERATED_PRESETS[1].value\n};\n\n// settings managed outside of config\nvar _multiplier;\nvar elevation;\nvar LAYERS_MAP = {};\nfor (var _i = 0, _layers = layers; _i < _layers.length; _i++) {\n  var layer = _layers[_i];\n  LAYERS_MAP[layer.key] = layer;\n  DEFAULT_CONFIG.layers[layer.key] = _objectSpread({}, layer.defaultConfig);\n}\nfunction getConfigFromURL() {\n  try {\n    return JSON.parse(atob(window.location.hash.slice(1)));\n  } catch (e) {\n    return null;\n  }\n}\nfunction setConfigInURL(config) {\n  window.location.hash = \"#\" + btoa(JSON.stringify(config));\n}\nexport default function SatSim() {\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    globe = _React$useState2[0],\n    setGlobe = _React$useState2[1];\n  var _React$useState3 = React.useState(getConfigFromURL() || DEFAULT_CONFIG),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    config = _React$useState4[0],\n    setConfigState = _React$useState4[1];\n  var setConfig = function setConfig(keyPath, value) {\n    var newConfig = assocIn(config, keyPath, value);\n    setConfigState(newConfig);\n    setConfigInURL(newConfig);\n  };\n  var getConfig = function getConfig(keyPath) {\n    return getIn(config, keyPath);\n  };\n  var inputConfig = function inputConfig(keyPath) {\n    return {\n      value: getConfig(keyPath),\n      onChange: function onChange(e) {\n        return setConfig(keyPath, e.target.value);\n      }\n    };\n  };\n  var checkboxConfig = function checkboxConfig(keyPath) {\n    return {\n      checked: getConfig(keyPath),\n      onChange: function onChange(e) {\n        return setConfig(keyPath, e.target.checked);\n      }\n    };\n  };\n  React.useEffect(function () {\n    var globe = init(ref.current);\n    setGlobe({\n      globe: globe\n    });\n  }, []);\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    computedConfig = _React$useState6[0],\n    setComputedConfig = _React$useState6[1];\n  React.useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var satellites;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            satellites = [];\n            if (!(config.satellitesType === \"starlink\")) {\n              _context.next = 7;\n              break;\n            }\n            _context.next = 4;\n            return loadStarlink();\n          case 4:\n            satellites = _context.sent;\n            _context.next = 8;\n            break;\n          case 7:\n            if (config.satellitesType === \"generated\") {\n              satellites = generateStarlink(config.generated);\n            }\n          case 8:\n            setComputedConfig(_objectSpread(_objectSpread({}, config), {}, {\n              satellites: satellites\n            }));\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }, [config]);\n  React.useEffect(function () {\n    if (globe && computedConfig) {\n      globe.globe.config = computedConfig;\n      return update(globe.globe);\n    }\n  }, [globe, computedConfig]);\n\n  // these are stored separately for performance reasons\n  var _React$useState7 = React.useState(DEFAULT_CONFIG.multiplier),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    multiplier_ = _React$useState8[0],\n    setMultiplier = _React$useState8[1];\n  _multiplier = multiplier_;\n  var _React$useState9 = React.useState(DEFAULT_CONFIG.elevation),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    elevation_ = _React$useState10[0],\n    setElevation = _React$useState10[1];\n  elevation = elevation_;\n  var setRealTime = function setRealTime() {\n    setMultiplier(1);\n    globe.date = null;\n    setConfig([\"nonce\"], Date.now());\n  };\n  var _React$useState11 = React.useState(window.innerWidth > 1000),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    settingsVisible = _React$useState12[0],\n    setSettingsVisible = _React$useState12[1];\n  var settingsProps = {\n    config: config,\n    inputConfig: inputConfig,\n    checkboxConfig: checkboxConfig,\n    setConfig: setConfig,\n    getConfig: getConfig\n  };\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"absolute top-0 left-0 bottom-0 right-0 flex flex-col items-center bg-black\",\n    ref: ref\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 left-0 text-white p-2\",\n    id: \"time\"\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 right-0 text-white p-2\",\n    id: \"fps\"\n  }), __jsx(\"div\", {\n    className: \"absolute bottom-0 right-0 left-0 text-white text-center p-2\",\n    id: \"route\"\n  }), __jsx(\"div\", {\n    className: \"absolute top-0 right-0 text-white\"\n  }, \"SatSim v1.0 \", __jsx(\"a\", {\n    href: \"https://github.com/tlrobinson/satsim\"\n  }, \"(src)\")), settingsVisible ? __jsx(\"div\", {\n    className: \"absolute top-0 left-0 text-white\"\n  }, __jsx(SettingsSectionHeader, null, \"Satellites\", __jsx(\"span\", {\n    className: \"flex-1\"\n  }), __jsx(SettingsButton, {\n    onClick: function onClick() {\n      return setSettingsVisible(false);\n    }\n  }, \"\\xD7\")), __jsx(SettingsSection, null, __jsx(SettingsRow, null, __jsx(SettingSelect, inputConfig([\"satellitesType\"]), __jsx(\"option\", {\n    value: \"starlink\"\n  }, \"Starlink (Live)\"), __jsx(\"option\", {\n    value: \"generated\"\n  }, \"Generated\")), getConfig([\"satellitesType\"]) === \"generated\" && __jsx(SettingSelect, {\n    className: \"ml-2\",\n    value: _.findIndex(GENERATED_PRESETS, function (_ref2) {\n      var value = _ref2.value;\n      return _.isEqual(value, config.generated);\n    }),\n    onChange: function onChange(e) {\n      return setConfig([\"generated\"], GENERATED_PRESETS[e.target.value].value);\n    }\n  }, __jsx(\"option\", {\n    disabled: true,\n    value: -1\n  }, \"Select a preset...\"), GENERATED_PRESETS.map(function (_ref3, index) {\n    var name = _ref3.name;\n    return __jsx(\"option\", {\n      value: index\n    }, name);\n  }))), getConfig([\"satellitesType\"]) === \"generated\" && __jsx(\"div\", null, getConfig([\"generated\"]).map(function (shell, shellIndex, shells) {\n    return __jsx(\"div\", {\n      className: \"border-b border-white mt-1 mb-1 pb-1\"\n    }, __jsx(\"div\", {\n      className: \"flex items-center\"\n    }, __jsx(\"strong\", null, \"Orbital Shell \", shellIndex + 1), __jsx(\"span\", null, \" – \", shell.orbitalPlanes * shell.satellitesPerOrbitalPlane, \" \", \"satellites\"), __jsx(\"span\", {\n      className: \"flex-1\"\n    }), shells.length > 1 && __jsx(SettingsButton, {\n      onClick: function onClick() {\n        return setConfig([\"generated\"], [].concat(_toConsumableArray(shells.slice(0, shellIndex)), _toConsumableArray(shells.slice(shellIndex + 1))));\n      }\n    }, \"\\xD7\"), shellIndex === shells.length - 1 && __jsx(SettingsButton, {\n      onClick: function onClick() {\n        return setConfig([\"generated\"], [].concat(_toConsumableArray(shells), [shell]));\n      }\n    }, \"+\")), __jsx(Setting, {\n      title: \"Orbital Planes\"\n    }, __jsx(SettingNumber, _extends({\n      min: 1,\n      max: 100\n    }, inputConfig([\"generated\", shellIndex, \"orbitalPlanes\"])))), __jsx(Setting, {\n      title: \"Satellites per Plane\"\n    }, __jsx(SettingNumber, _extends({\n      min: 1,\n      max: 100\n    }, inputConfig([\"generated\", shellIndex, \"satellitesPerOrbitalPlane\"])))), __jsx(Setting, {\n      title: \"Inclination\"\n    }, __jsx(SettingNumber, _extends({\n      min: 0,\n      max: 360\n    }, inputConfig([\"generated\", shellIndex, \"inclination\"])))), __jsx(Setting, {\n      title: \"Altitude\"\n    }, __jsx(SettingNumber, _extends({\n      min: 1,\n      max: 1000\n    }, inputConfig([\"generated\", shellIndex, \"altitude\"])))));\n  })), __jsx(Setting, {\n    title: \"Min Elevation\"\n  }, __jsx(SettingRange, {\n    min: 0,\n    max: 90,\n    value: elevation,\n    onChange: function onChange(e) {\n      return setElevation(e.target.value);\n    }\n  }), __jsx(\"span\", {\n    className: \"ml-1\"\n  }, elevation, \"\\xB0\"))), __jsx(SettingsSectionHeader, null, \"Time\"), __jsx(SettingsSection, null, __jsx(SettingsRow, null, __jsx(SettingRange, {\n    min: -400,\n    max: 400,\n    value: _multiplier,\n    onChange: function onChange(e) {\n      return setMultiplier(e.target.value);\n    }\n  }), __jsx(\"span\", {\n    className: \"ml-1\"\n  }, _multiplier, \"\\xD7\"), __jsx(\"span\", {\n    className: \"flex-1\"\n  }), __jsx(SettingsButton, {\n    onClick: setRealTime\n  }, \"Real-time\"))), __jsx(SettingsSectionHeader, null, \"Layers\"), layers.filter(function (layer) {\n    return typeof layer.canEnable !== \"function\" || layer.canEnable(config);\n  }).map(function (layer) {\n    return __jsx(SettingsLayerSection, {\n      layer: layer,\n      config: config,\n      setConfig: setConfig\n    }, typeof layer.renderSettings === \"function\" && layer.renderSettings(settingsProps));\n  })) : __jsx(\"div\", {\n    className: \"absolute top-0 left-0 text-white\"\n  }, __jsx(SettingsSectionHeader, null, __jsx(SettingsButton, {\n    onClick: function onClick() {\n      return setSettingsVisible(true);\n    }\n  }, \"Settings\"))));\n}\nfunction init(element) {\n  var globe = Globe();\n  globe(element).globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-dark.jpg\")\n  // .bumpImageUrl(\"//unpkg.com/three-globe/example/img/earth-topology.png\")\n  // .backgroundImageUrl(\"//unpkg.com/three-globe/example/img/night-sky.png\")\n  .pointOfView({\n    lat: 38,\n    lng: -100,\n    altitude: 1.5\n  }, 1000).customThreeObject(function (d, globeRadius) {\n    globe.radius = globeRadius;\n    if (LAYERS_MAP[d.type]) {\n      return LAYERS_MAP[d.type].create(globe, d, globeRadius);\n    } else {\n      console.warn(\"Unknown type\", d.type);\n    }\n  }).customThreeObjectUpdate(function (obj, d, globeRadius) {\n    globe.radius = globeRadius;\n    if (LAYERS_MAP[d.type]) {\n      return LAYERS_MAP[d.type].update(globe, d, obj, globeRadius);\n    }\n  });\n  return globe;\n}\nfunction update(globe) {\n  var config = globe.config;\n  var satellites = config.satellites;\n  globe.satellites = satellites;\n  var resolution = config.layers.coverage.resolution;\n  var coverageAverageEnabled = config.layers.coverage.enabled && config.layers.coverage.type === \"average\";\n  var routingEnabled = config.layers.routing.enabled;\n  var routingLasersEnabled = config.layers.routing.use_laser_links;\n  var laserEnabled = config.layers.laser.enabled;\n  var coverageTotal;\n  if (coverageAverageEnabled) {\n    globe.cells = getCellsForResolution(resolution);\n    globe.coverage = computeCoverage({\n      resolution: resolution,\n      satellites: satellites\n    });\n    coverageTotal = makeCoverage(globe.cells);\n  }\n  globe.laserLinks = [];\n  if (laserEnabled || routingEnabled && routingLasersEnabled) {\n    globe.laserLinks = laserLinksForSatellites(satellites, config.layers.laser);\n  }\n  globe.gateways = getGateways(config.layers.gateway);\n  globe.gatewaysIndex = getGatewaysIndex(globe.gateways);\n  var enabledLayers = layers.filter(function (layer) {\n    return config.layers[layer.key].enabled;\n  });\n  var customLayerData = enabledLayers.flatMap(function (layer) {\n    return layer.objects(globe);\n  });\n  globe.customLayerData(customLayerData);\n  var ticks = 0;\n  var last;\n  var avgFps;\n  var SMOOTHING = 0.95;\n  function update(date) {\n    ticks++;\n    globe.config.elevation = elevation;\n    var positions = getSatellitePositions(satellites, date, {\n      elevation: globe.config.elevation\n    });\n    globe.positions = positions;\n    globe.date = date;\n    var satellitesByCell, cellsBySatellite;\n    if (coverageAverageEnabled || routingEnabled) {\n      var _computeCoverageAtMom = computeCoverageAtMoment({\n        elevation: globe.config.elevation,\n        resolution: resolution,\n        positions: positions\n      });\n      satellitesByCell = _computeCoverageAtMom.satellitesByCell;\n      cellsBySatellite = _computeCoverageAtMom.cellsBySatellite;\n    }\n    globe.coverage = {};\n    if (coverageAverageEnabled) {\n      for (var _i2 = 0, _Object$keys = Object.keys(coverageTotal); _i2 < _Object$keys.length; _i2++) {\n        var cell = _Object$keys[_i2];\n        coverageTotal[cell] += satellitesByCell[cell] ? 1 : 0;\n        globe.coverage[cell] = coverageTotal[cell] / ticks;\n      }\n    }\n    globe.route = null;\n    document.getElementById(\"route\").textContent = \"\";\n    if (routingEnabled) {\n      var _globe$config$layers$ = globe.config.layers.routing,\n        pointA = _globe$config$layers$.pointA,\n        pointB = _globe$config$layers$.pointB,\n        use_laser_links = _globe$config$layers$.use_laser_links,\n        use_gateways = _globe$config$layers$.use_gateways;\n      var links = [];\n      if (use_laser_links) {\n        links.push.apply(links, _toConsumableArray(globe.laserLinks));\n      }\n      var relays = [];\n      if (use_gateways) {\n        relays.push.apply(relays, _toConsumableArray(globe.gateways.map(function (g) {\n          return g.position;\n        })));\n      }\n      try {\n        globe.route = computeShortestPath(pointA, pointB, positions, {\n          links: links,\n          relays: relays,\n          satellitesByCell: satellitesByCell,\n          resolution: resolution\n        });\n        document.getElementById(\"route\").textContent = \"Route distance: \".concat(Math.round(globe.route.distance), \" km. Route latency: ~\").concat(Math.round(globe.route.latency), \" ms\");\n      } catch (e) {\n        document.getElementById(\"route\").textContent = \"Route: none\";\n      }\n    }\n    var _iterator = _createForOfIteratorHelper(customLayerData),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var data = _step.value;\n        if (data.satelliteIndex != null) {\n          data.position = positions[data.satelliteIndex];\n        }\n        if (data.satelliteIndexes) {\n          data.positions = data.satelliteIndexes.map(function (index) {\n            return positions[index];\n          });\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    globe.customLayerData(customLayerData);\n    var now = Date.now();\n    if (last != null) {\n      var fps = 1 / ((now - last) / 1000);\n      avgFps = (avgFps || fps) * SMOOTHING + fps * (1.0 - SMOOTHING);\n      document.getElementById(\"fps\").textContent = avgFps.toFixed(0) + \" FPS\";\n    }\n    last = now;\n    document.getElementById(\"time\").textContent = String(date).replace(/ \\(.*/, \"\");\n  }\n  return startTimer(update, {\n    // start: globe.date ? globe.date.getTime() : Date.now(),\n    multiplier: function multiplier() {\n      return _multiplier;\n    },\n    interval: 20\n  });\n}","map":null,"metadata":{},"sourceType":"module"}