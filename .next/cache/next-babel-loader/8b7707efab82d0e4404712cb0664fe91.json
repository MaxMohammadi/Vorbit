{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { classnames as c } from \"tailwindcss-classnames\";\nexport function SettingsSection({\n  children\n}) {\n  return __jsx(\"div\", {\n    className: \"m-2 p-2 border border-white rounded\"\n  }, children);\n}\nexport function SettingsSectionHeader({\n  children\n}) {\n  return __jsx(\"h3\", {\n    className: \"m-2 text-white flex items-center\"\n  }, children);\n}\nexport function Setting({\n  title,\n  children\n}) {\n  return __jsx(SettingsRow, {\n    className: \"my-1\"\n  }, title && __jsx(\"span\", {\n    className: \"mr-1\"\n  }, title, \":\"), __jsx(\"span\", {\n    className: \"flex-1\"\n  }), __jsx(\"span\", null, children));\n}\nexport function SettingsRow({\n  className = null,\n  children\n}) {\n  return __jsx(\"div\", {\n    className: c(className, \"flex\", \"items-center\")\n  }, children);\n}\nexport function SettingCheckbox(props) {\n  return __jsx(\"input\", _extends({\n    type: \"checkbox\"\n  }, props));\n}\nexport function SettingInput(_ref) {\n  let {\n      className\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"className\"]);\n  return __jsx(\"input\", _extends({\n    className: c(className, \"rounded text-black px-2\")\n  }, props));\n}\nexport function SettingNumber(_ref2) {\n  let {\n      onChange\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, [\"onChange\"]);\n  return __jsx(SettingInput, _extends({\n    type: \"number\"\n  }, props, {\n    onChange: e => onChange({\n      target: {\n        value: parseFloat(e.target.value)\n      }\n    })\n  }));\n}\nexport function SettingRange(_ref3) {\n  let {\n      onChange\n    } = _ref3,\n    props = _objectWithoutProperties(_ref3, [\"onChange\"]);\n  return __jsx(\"input\", _extends({\n    type: \"range\"\n  }, props, {\n    onChange: e => onChange({\n      target: {\n        value: parseFloat(e.target.value)\n      }\n    })\n  }));\n}\nexport function SettingSelect(_ref4) {\n  let {\n      className\n    } = _ref4,\n    props = _objectWithoutProperties(_ref4, [\"className\"]);\n  return __jsx(\"select\", _extends({\n    className: c(className, \"border\", \"border-white\", \"bg-black\", \"rounded\")\n  }, props));\n}\nexport function SettingsLayerSection({\n  layer,\n  config,\n  setConfig,\n  children = null\n}) {\n  const enabled = config.layers[layer.key].enabled;\n  return __jsx(SettingsSection, null, __jsx(\"div\", {\n    className: enabled && children ? c(\"border-b\", \"border-white\", \"mb-2\", \"pb-1\") : null\n  }, __jsx(SettingCheckbox, {\n    checked: config.layers[layer.key].enabled,\n    onChange: e => setConfig([\"layers\", layer.key, \"enabled\"], e.target.checked)\n  }), \" \", __jsx(\"span\", null, layer.name)), enabled ? children : null);\n}\nexport function SettingsButton(_ref5) {\n  let {\n      children\n    } = _ref5,\n    props = _objectWithoutProperties(_ref5, [\"children\"]);\n  return __jsx(\"button\", _extends({\n    className: \"border border-white rounded ml-2 px-1\"\n  }, props), children);\n}","map":null,"metadata":{},"sourceType":"module"}