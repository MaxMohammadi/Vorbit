{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Setting, SettingSelect } from \"../components/settings\";\nimport coverageAverageLayer from \"./coverage_average\";\nimport coverageInstantaneousLayer from \"./coverage_instantaneous\";\nvar layer = function layer(config) {\n  return config.layers.coverage.type === \"average\" ? coverageAverageLayer : coverageInstantaneousLayer;\n};\nexport default {\n  name: \"Coverage\",\n  key: \"coverage\",\n  defaultConfig: _objectSpread(_objectSpread({\n    type: \"instantaneous\"\n  }, coverageAverageLayer.defaultConfig), coverageInstantaneousLayer.defaultConfig),\n  objects: function objects(globe) {\n    return layer(globe.config).objects(globe);\n  },\n  create: function create(globe, d, globeRadius) {\n    return layer(globe.config).create(globe, d, globeRadius);\n  },\n  update: function update(globe, d, obj) {\n    return layer(globe.config).update(globe, d, obj);\n  },\n  renderSettings: function renderSettings(props) {\n    var config = props.config,\n      inputConfig = props.inputConfig;\n    return __jsx(\"div\", null, __jsx(Setting, {\n      title: \"Type\"\n    }, __jsx(SettingSelect, inputConfig([\"layers\", \"coverage\", \"type\"]), __jsx(\"option\", {\n      value: \"average\"\n    }, \"Average\"), __jsx(\"option\", {\n      value: \"instantaneous\"\n    }, \"Instantaneous\"))), layer(config).renderSettings(props));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}