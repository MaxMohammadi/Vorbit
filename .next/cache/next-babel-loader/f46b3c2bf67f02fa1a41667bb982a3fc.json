{"ast":null,"code":"import * as THREE from \"three\";\nimport * as _ from \"lodash\";\nimport { EARTH_RADIUS_KM } from \"../constants\";\nvar objectForSatelliteIndex = _.memoize(function (index) {\n  return {\n    type: \"satellite\",\n    satelliteIndex: index\n  };\n});\nexport default {\n  key: \"satellite\",\n  name: \"Satellites\",\n  defaultConfig: {\n    enabled: true\n  },\n  objects: function objects(_ref) {\n    var satellites = _ref.satellites;\n    return satellites.map(function (satellite, index) {\n      return objectForSatelliteIndex(index);\n    });\n  },\n  create: function create(globe, d) {\n    return new THREE.Mesh(new THREE.SphereBufferGeometry(0.25), new THREE.MeshBasicMaterial({\n      color: \"grey\"\n    }));\n  },\n  update: function update(globe, d, obj) {\n    if (!d.position) {\n      return;\n    }\n    var height = d.position.height / EARTH_RADIUS_KM;\n    Object.assign(obj.position, globe.getCoords(d.position.lat, d.position.lng, height));\n  }\n};","map":{"version":3,"names":["THREE","_","EARTH_RADIUS_KM","objectForSatelliteIndex","memoize","index","type","satelliteIndex","key","name","defaultConfig","enabled","objects","_ref","satellites","map","satellite","create","globe","d","Mesh","SphereBufferGeometry","MeshBasicMaterial","color","update","obj","position","height","Object","assign","getCoords","lat","lng"],"sources":["/Users/maxmohammadi/Vorbit-Space/src/layers/satellite.ts"],"sourcesContent":["import * as THREE from \"three\";\n\nimport * as _ from \"lodash\";\n\nimport { EARTH_RADIUS_KM } from \"../constants\";\n\nconst objectForSatelliteIndex = _.memoize((index) => ({\n  type: \"satellite\",\n  satelliteIndex: index,\n}));\n\nexport default {\n  key: \"satellite\",\n  name: \"Satellites\",\n  defaultConfig: {\n    enabled: true,\n  },\n  objects({ satellites }) {\n    return satellites.map((satellite, index) => objectForSatelliteIndex(index));\n  },\n  create(globe, d) {\n    return new THREE.Mesh(\n      new THREE.SphereBufferGeometry(0.25),\n      new THREE.MeshBasicMaterial({ color: \"grey\" })\n    );\n  },\n  update(globe, d, obj) {\n    if (!d.position) {\n      return;\n    }\n    let height = d.position.height / EARTH_RADIUS_KM;\n    Object.assign(\n      obj.position,\n      globe.getCoords(d.position.lat, d.position.lng, height)\n    );\n  },\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAE3B,SAASC,eAAe,QAAQ,cAAc;AAE9C,IAAMC,uBAAuB,GAAGF,CAAC,CAACG,OAAO,CAAC,UAACC,KAAK;EAAA,OAAM;IACpDC,IAAI,EAAE,WAAW;IACjBC,cAAc,EAAEF;EAClB,CAAC;AAAA,CAAC,CAAC;AAEH,eAAe;EACbG,GAAG,EAAE,WAAW;EAChBC,IAAI,EAAE,YAAY;EAClBC,aAAa,EAAE;IACbC,OAAO,EAAE;EACX,CAAC;EACDC,OAAO,WAAAA,QAAAC,IAAA,EAAiB;IAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAClB,OAAOA,UAAU,CAACC,GAAG,CAAC,UAACC,SAAS,EAAEX,KAAK;MAAA,OAAKF,uBAAuB,CAACE,KAAK,CAAC;IAAA,EAAC;EAC7E,CAAC;EACDY,MAAM,WAAAA,OAACC,KAAK,EAAEC,CAAC,EAAE;IACf,OAAO,IAAInB,KAAK,CAACoB,IAAI,CACnB,IAAIpB,KAAK,CAACqB,oBAAoB,CAAC,IAAI,CAAC,EACpC,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC,CAC/C;EACH,CAAC;EACDC,MAAM,WAAAA,OAACN,KAAK,EAAEC,CAAC,EAAEM,GAAG,EAAE;IACpB,IAAI,CAACN,CAAC,CAACO,QAAQ,EAAE;MACf;IACF;IACA,IAAIC,MAAM,GAAGR,CAAC,CAACO,QAAQ,CAACC,MAAM,GAAGzB,eAAe;IAChD0B,MAAM,CAACC,MAAM,CACXJ,GAAG,CAACC,QAAQ,EACZR,KAAK,CAACY,SAAS,CAACX,CAAC,CAACO,QAAQ,CAACK,GAAG,EAAEZ,CAAC,CAACO,QAAQ,CAACM,GAAG,EAAEL,MAAM,CAAC,CACxD;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module"}