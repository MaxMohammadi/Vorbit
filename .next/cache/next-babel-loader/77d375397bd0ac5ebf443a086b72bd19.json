{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport axios from \"axios\";\nimport * as satellite from \"satellite.js\";\nimport * as _ from \"lodash\";\nimport { meanMotionRadPerMinute } from \"./satellites\";\nconst prototypeSatRec = satellite.twoline2satrec(`1 00001U 19029BR  20182.59692852  .00001103  00000-0  33518-4 0  9990`, `2 00001 53.00000   0.7036 0003481 299.7327   0.3331 15.05527065  1773`);\nexport function generateStarlink(shells) {\n  return shells.map((shell, index) => generateStarlinkShell(shell, index)).flat();\n}\nfunction generateStarlinkShell({\n  orbitalPlanes = 40,\n  satellitesPerOrbitalPlane = 40,\n  inclination = 53,\n  altitude = 550\n} = {}, shell) {\n  const orbitalPlanespacing = Math.PI * 2 / orbitalPlanes;\n  const satelliteSpacing = Math.PI * 2 / satellitesPerOrbitalPlane;\n  const meanMotion = meanMotionRadPerMinute(altitude);\n  const satellites = [];\n  for (let plane = 0; plane < orbitalPlanes; plane++) {\n    for (let sat = 0; sat < satellitesPerOrbitalPlane; sat++) {\n      const satnum = plane * 1000 + sat;\n      const satrec = _objectSpread(_objectSpread({}, prototypeSatRec), {}, {\n        satnum: satnum,\n        inclo: inclination * (Math.PI / 180),\n        nodeo: orbitalPlanespacing * plane,\n        ecco: 0.000542,\n        argpo: 5.156060402887908,\n        mo: satelliteSpacing * sat,\n        no: meanMotion\n      });\n      satellites.push({\n        name: \"satellite\" + satnum,\n        shell: shell,\n        plane: plane,\n        index: sat,\n        satrec: satrec\n      });\n    }\n  }\n  return satellites;\n}\nexport const loadStarlink = _.memoize(async function loadStarlink() {\n  const starlink = await axios.get(\"/api/starlink\");\n  const lines = starlink.data.split(\"\\n\");\n  const satellites = [];\n  for (let i = 0; i < lines.length; i += 3) {\n    const name = lines[i];\n    const tle = [lines[i + 1], lines[i + 2]];\n    if (name && tle[0] && tle[1]) {\n      const satrec = satellite.twoline2satrec(...tle);\n      satellites.push({\n        name,\n        tle,\n        satrec\n      });\n    }\n  }\n  return satellites;\n});","map":{"version":3,"names":["axios","satellite","_","meanMotionRadPerMinute","prototypeSatRec","twoline2satrec","generateStarlink","shells","map","shell","index","generateStarlinkShell","flat","orbitalPlanes","satellitesPerOrbitalPlane","inclination","altitude","orbitalPlanespacing","Math","PI","satelliteSpacing","meanMotion","satellites","plane","sat","satnum","satrec","_objectSpread","inclo","nodeo","ecco","argpo","mo","no","push","name","loadStarlink","memoize","starlink","get","lines","data","split","i","length","tle"],"sources":["/Users/maxmohammadi/Vorbit-Space/src/starlink.ts"],"sourcesContent":["import axios from \"axios\";\nimport * as satellite from \"satellite.js\";\nimport * as _ from \"lodash\";\n\nimport { meanMotionRadPerMinute } from \"./satellites\";\n\nconst prototypeSatRec = satellite.twoline2satrec(\n  `1 00001U 19029BR  20182.59692852  .00001103  00000-0  33518-4 0  9990`,\n  `2 00001 53.00000   0.7036 0003481 299.7327   0.3331 15.05527065  1773`\n);\n\nexport function generateStarlink(shells) {\n  return shells\n    .map((shell, index) => generateStarlinkShell(shell, index))\n    .flat();\n}\n\nfunction generateStarlinkShell(\n  {\n    orbitalPlanes = 40,\n    satellitesPerOrbitalPlane = 40,\n    inclination = 53,\n    altitude = 550,\n  } = {},\n  shell\n) {\n  const orbitalPlanespacing = (Math.PI * 2) / orbitalPlanes;\n  const satelliteSpacing = (Math.PI * 2) / satellitesPerOrbitalPlane;\n  const meanMotion = meanMotionRadPerMinute(altitude);\n\n  const satellites = [];\n  for (let plane = 0; plane < orbitalPlanes; plane++) {\n    for (let sat = 0; sat < satellitesPerOrbitalPlane; sat++) {\n      const satnum = plane * 1000 + sat;\n\n      const satrec = {\n        ...prototypeSatRec,\n        satnum: satnum,\n        inclo: inclination * (Math.PI / 180),\n        nodeo: orbitalPlanespacing * plane,\n        ecco: 0.000542,\n        argpo: 5.156060402887908,\n        mo: satelliteSpacing * sat,\n        no: meanMotion,\n      };\n\n      satellites.push({\n        name: \"satellite\" + satnum,\n        shell: shell,\n        plane: plane,\n        index: sat,\n        satrec: satrec,\n      });\n    }\n  }\n\n  return satellites;\n}\n\nexport const loadStarlink = _.memoize(async function loadStarlink() {\n  const starlink = await axios.get(\"/api/starlink\");\n  const lines = starlink.data.split(\"\\n\");\n  const satellites = [];\n  for (let i = 0; i < lines.length; i += 3) {\n    const name = lines[i];\n    const tle = [lines[i + 1], lines[i + 2]];\n    if (name && tle[0] && tle[1]) {\n      const satrec = satellite.twoline2satrec(...tle);\n      satellites.push({ name, tle, satrec });\n    }\n  }\n  return satellites;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}