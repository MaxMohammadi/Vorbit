{"ast":null,"code":"import * as satellite from \"satellite.js\";\nimport { getSatelliteCoverageRadius } from \"./coverage\";\nimport { EARTH_MASS_KG, EARTH_RADIUS_M, G } from \"./constants\";\nexport function getSatellitePosition(sat, time = new Date(), {\n  elevation = null\n} = {}) {\n  const positionAndVelocity = satellite.propagate(sat.satrec, time);\n  if (!positionAndVelocity.position) {\n    return;\n  }\n  const positionGd = satellite.eciToGeodetic(positionAndVelocity.position, satellite.gstime(time));\n  const lng = positionGd.longitude * 180 / Math.PI;\n  const lat = positionGd.latitude * 180 / Math.PI;\n  const height = positionGd.height;\n  const coverageRadius = elevation != null ? getSatelliteCoverageRadius(height, elevation) : null;\n  return {\n    sat,\n    lng,\n    lat,\n    height,\n    coverageRadius\n  };\n}\nexport function getSatellitePositions(sats, time = new Date(), {\n  elevation = null\n} = {}) {\n  return sats.map(sat => getSatellitePosition(sat, time, {\n    elevation\n  })).filter(x => x);\n}\nexport function orbitalPeriod(height) {\n  // https://www.physicsclassroom.com/class/circles/Lesson-4/Mathematics-of-Satellite-Motion\n  const R = EARTH_RADIUS_M + height * 1000;\n  return Math.sqrt(4 * Math.pow(Math.PI, 2) / (G * EARTH_MASS_KG) * Math.pow(R, 3));\n}\nexport function meanMotionRadPerMinute(height) {\n  const seconds = orbitalPeriod(height);\n  return 2 * Math.PI / (seconds / 60);\n}","map":{"version":3,"names":["satellite","getSatelliteCoverageRadius","EARTH_MASS_KG","EARTH_RADIUS_M","G","getSatellitePosition","sat","time","Date","elevation","positionAndVelocity","propagate","satrec","position","positionGd","eciToGeodetic","gstime","lng","longitude","Math","PI","lat","latitude","height","coverageRadius","getSatellitePositions","sats","map","filter","x","orbitalPeriod","R","sqrt","pow","meanMotionRadPerMinute","seconds"],"sources":["/Users/maxmohammadi/Vorbit-Space/src/satellites.ts"],"sourcesContent":["import * as satellite from \"satellite.js\";\nimport { getSatelliteCoverageRadius } from \"./coverage\";\nimport { EARTH_RADIUS_KM, EARTH_MASS_KG, EARTH_RADIUS_M, G } from \"./constants\";\n\nexport function getSatellitePosition(\n  sat,\n  time = new Date(),\n  { elevation = null } = {}\n) {\n  const positionAndVelocity = satellite.propagate(sat.satrec, time);\n  if (!positionAndVelocity.position) {\n    return;\n  }\n  const positionGd = satellite.eciToGeodetic(\n    positionAndVelocity.position,\n    satellite.gstime(time)\n  );\n  const lng = (positionGd.longitude * 180) / Math.PI;\n  const lat = (positionGd.latitude * 180) / Math.PI;\n  const height = positionGd.height;\n  const coverageRadius =\n    elevation != null ? getSatelliteCoverageRadius(height, elevation) : null;\n\n  return { sat, lng, lat, height, coverageRadius };\n}\n\nexport function getSatellitePositions(\n  sats,\n  time = new Date(),\n  { elevation = null } = {}\n) {\n  return sats\n    .map((sat) => getSatellitePosition(sat, time, { elevation }))\n    .filter((x) => x);\n}\n\nexport function orbitalPeriod(height) {\n  // https://www.physicsclassroom.com/class/circles/Lesson-4/Mathematics-of-Satellite-Motion\n  const R = EARTH_RADIUS_M + height * 1000;\n  return Math.sqrt(\n    ((4 * Math.pow(Math.PI, 2)) / (G * EARTH_MASS_KG)) * Math.pow(R, 3)\n  );\n}\n\nexport function meanMotionRadPerMinute(height) {\n  const seconds = orbitalPeriod(height);\n  return (2 * Math.PI) / (seconds / 60);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,cAAc;AACzC,SAASC,0BAA0B,QAAQ,YAAY;AACvD,SAA0BC,aAAa,EAAEC,cAAc,EAAEC,CAAC,QAAQ,aAAa;AAE/E,OAAO,SAASC,oBAAoBA,CAClCC,GAAG,EACHC,IAAI,GAAG,IAAIC,IAAI,EAAE,EACjB;EAAEC,SAAS,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,EACzB;EACA,MAAMC,mBAAmB,GAAGV,SAAS,CAACW,SAAS,CAACL,GAAG,CAACM,MAAM,EAAEL,IAAI,CAAC;EACjE,IAAI,CAACG,mBAAmB,CAACG,QAAQ,EAAE;IACjC;EACF;EACA,MAAMC,UAAU,GAAGd,SAAS,CAACe,aAAa,CACxCL,mBAAmB,CAACG,QAAQ,EAC5Bb,SAAS,CAACgB,MAAM,CAACT,IAAI,CAAC,CACvB;EACD,MAAMU,GAAG,GAAIH,UAAU,CAACI,SAAS,GAAG,GAAG,GAAIC,IAAI,CAACC,EAAE;EAClD,MAAMC,GAAG,GAAIP,UAAU,CAACQ,QAAQ,GAAG,GAAG,GAAIH,IAAI,CAACC,EAAE;EACjD,MAAMG,MAAM,GAAGT,UAAU,CAACS,MAAM;EAChC,MAAMC,cAAc,GAClBf,SAAS,IAAI,IAAI,GAAGR,0BAA0B,CAACsB,MAAM,EAAEd,SAAS,CAAC,GAAG,IAAI;EAE1E,OAAO;IAAEH,GAAG;IAAEW,GAAG;IAAEI,GAAG;IAAEE,MAAM;IAAEC;EAAe,CAAC;AAClD;AAEA,OAAO,SAASC,qBAAqBA,CACnCC,IAAI,EACJnB,IAAI,GAAG,IAAIC,IAAI,EAAE,EACjB;EAAEC,SAAS,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,EACzB;EACA,OAAOiB,IAAI,CACRC,GAAG,CAAErB,GAAG,IAAKD,oBAAoB,CAACC,GAAG,EAAEC,IAAI,EAAE;IAAEE;EAAU,CAAC,CAAC,CAAC,CAC5DmB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;AACrB;AAEA,OAAO,SAASC,aAAaA,CAACP,MAAM,EAAE;EACpC;EACA,MAAMQ,CAAC,GAAG5B,cAAc,GAAGoB,MAAM,GAAG,IAAI;EACxC,OAAOJ,IAAI,CAACa,IAAI,CACZ,CAAC,GAAGb,IAAI,CAACc,GAAG,CAACd,IAAI,CAACC,EAAE,EAAE,CAAC,CAAC,IAAKhB,CAAC,GAAGF,aAAa,CAAC,GAAIiB,IAAI,CAACc,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,CACpE;AACH;AAEA,OAAO,SAASG,sBAAsBA,CAACX,MAAM,EAAE;EAC7C,MAAMY,OAAO,GAAGL,aAAa,CAACP,MAAM,CAAC;EACrC,OAAQ,CAAC,GAAGJ,IAAI,CAACC,EAAE,IAAKe,OAAO,GAAG,EAAE,CAAC;AACvC"},"metadata":{},"sourceType":"module"}