#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var commander_1 = tslib_1.__importDefault(require("commander"));
var inquirer_1 = tslib_1.__importDefault(require("inquirer"));
var colors_1 = tslib_1.__importDefault(require("colors"));
var createFile_1 = require("./generation/createFile");
commander_1.default
    .option('-c, --config <config>', 'Name or relative path of the TailwindCSS config file')
    .option('-o, --output <output>', 'Name or relative path of the generated types file', 'tailwindcss-classnames.ts')
    .option('-f, --classesFile <classesFile>', 'Name or relative path of the file with the custom types', 'none')
    .option('-t, --typeName <typeName>', 'Name of the type exported from file containing the custom classes', 'none')
    .action(function (_a) {
    var config = _a.config, output = _a.output, classesFile = _a.classesFile, typeName = _a.typeName;
    if (config) {
        createFile_1.createFileWithGeneratedTypes({
            configFilename: config,
            outputFilename: output,
            customClassesFilename: classesFile,
            customClassesTypeName: typeName,
        });
    }
    else {
        inquirer_1.default
            .prompt([
            {
                name: 'configFilename',
                type: 'input',
                default: 'tailwind.config.js',
                message: 'Tailwind configuration filename',
            },
            {
                name: 'outputFilename',
                type: 'input',
                default: 'tailwindcss-classnames.ts',
                message: 'Name of the file with generated types',
            },
            {
                name: 'cutomClassesFilename',
                type: 'input',
                default: 'none',
                message: 'Name or path of the file with the custom types',
            },
            {
                name: 'customClassesTypeName',
                type: 'input',
                default: 'none',
                message: 'Name of the type exported from file containing the custom classes',
            },
        ])
            .then(function (answers) {
            createFile_1.createFileWithGeneratedTypes({
                configFilename: answers.configFilename,
                outputFilename: answers.outputFilename,
                customClassesFilename: answers.cutomClassesFilename,
                customClassesTypeName: answers.customClassesTypeName,
            });
        })
            .catch(function (error) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
            if (error.isTtyError) {
                console.error(colors_1.default.red("Prompt couldn't be rendered in the current environment"));
            }
            else {
                console.error(colors_1.default.red('Something went wrong with the prompt'));
            }
        });
    }
});
commander_1.default.parse(process.argv);
//# sourceMappingURL=cli.js.map