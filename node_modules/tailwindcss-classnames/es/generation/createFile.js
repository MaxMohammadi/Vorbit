import fs from 'fs';
import colors from 'colors';
import { baseTemplateString } from './utils/baseTemplateString';
import { ClassesGenerator } from './ClassesGenerator';
export function createFileWithGeneratedTypes(options) {
    var configFilename = options.configFilename, outputFilename = options.outputFilename, customClassesFilename = options.customClassesFilename, customClassesTypeName = options.customClassesTypeName;
    //prettier-ignore
    if (!configFilename)
        return console.error('tailwindcss config file is not provided'.red);
    if (!outputFilename)
        return console.error('Please provide a valid filename to add generated types to it'.red);
    if (!customClassesFilename)
        return console.error('Please provide the file containing the custom classes'.red);
    if (!customClassesTypeName)
        return console.error('Please provide the name of exported custom classes type'.red);
    fs.readFile("./" + configFilename, { encoding: 'utf-8' }, function (err, data) {
        if (err) {
            console.error(("Error Reading: \"./" + configFilename + "\"").red);
            console.error(err);
        }
        var customFormsPluginClassesType = data.includes('@tailwindcss/custom-forms')
            ? '  | TCustomFormsPluginClasses'
            : '';
        data = data.replace(/(['"])?plugins(['"])? *: *\[(.*|\n)*?],?/g, '');
        var classesGenerator = new ClassesGenerator(eval(data));
        var isCustomClassesAdded = typeof customClassesTypeName !== 'undefined' &&
            typeof customClassesFilename !== 'undefined' &&
            customClassesTypeName !== 'none' &&
            customClassesFilename !== 'none';
        var importedTCustomClasses = isCustomClassesAdded ? '  | TCustomClassesFromExternalFile' : '';
        var TCustomClassesImportStatement = isCustomClassesAdded
            ? "import {" + customClassesTypeName + " as TCustomClassesFromExternalFile} from './" + customClassesFilename + "';"
            : '';
        var result = baseTemplateString
            .replace(/___ALL_CLASSES___/g, classesGenerator.generate())
            .replace(/CUSTOM_FORMS_PLUGIN_TYPE/g, customFormsPluginClassesType)
            .replace(/IMPORTED_T_CUSTOM_CLASSES/g, importedTCustomClasses)
            .replace(/T_CUSTOM_CLASSES_IMPORT_STATEMENT/g, TCustomClassesImportStatement);
        fs.writeFile("" + outputFilename, result, 'utf8', function (error) {
            if (error) {
                console.error(colors.red(error.toString()));
            }
        });
    });
}
//# sourceMappingURL=createFile.js.map